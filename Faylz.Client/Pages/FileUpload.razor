@page "/file-upload"
@inject ILogger<FileUpload> Logger
@inject IJSRuntime JS

<PageTitle>File Upload | Faylz</PageTitle>

<div class="bg-gradient-to-b from-blue-50 to-white pt-12 pb-6">
    <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto">
            <div class="mb-8 text-center">
                <h1 class="text-3xl font-bold mb-4">File Upload Example</h1>
                <p class="text-gray-600 max-w-2xl mx-auto">Upload and preview images with our modern file upload component.</p>
            </div>
        </div>
    </div>
</div>

<div class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
        <div class="bg-white rounded-xl shadow-md p-8 border border-gray-100 mb-8">
            <div class="space-y-6">
                <div>
                    <h2 class="text-xl font-semibold mb-4">Upload and Preview</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                        <div>
                            <div 
                                class="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center cursor-pointer hover:bg-blue-50 transition-colors duration-150 @(isDragging ? "bg-blue-50 border-blue-300" : "")" 
                                @ondragenter="() => isDragging = true" 
                                @ondragleave="() => isDragging = false"
                                @ondragover:preventDefault
                                @ondrop:preventDefault
                                @ondrop="() => isDragging = false"
                                @onclick="ClickInputFile">
                                
                                <div class="space-y-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                    <div class="font-medium text-gray-900">Drag & drop image here</div>
                                    <div class="text-gray-500 text-sm">or click to browse</div>
                                </div>
                                
                                <InputFile @ref="inputFile" OnChange="ShowPreview" class="hidden" accept="image/*" />
                            </div>
                            <div class="text-sm text-gray-500 mt-2">
                                Supported formats: JPG, PNG, GIF, WebP
                            </div>
                        </div>
                        <div>
                            <div class="rounded-lg border border-gray-200 overflow-hidden bg-gray-50 flex items-center justify-center" style="height: 250px;">
                                @if (hasPreview)
                                {
                                    <img @ref="previewImageElem" class="max-w-full max-h-full object-contain" />
                                }
                                else
                                {
                                    <div class="text-gray-400 text-center p-4">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                        </svg>
                                        <p>Image preview will appear here</p>
                                    </div>
                                }
                            </div>
                            <div class="mt-4 flex justify-end">
                                <button @onclick="ClearPreview" disabled="@(!hasPreview)" class="px-4 py-2 bg-gray-100 hover:bg-gray-200 disabled:bg-gray-50 disabled:text-gray-400 text-gray-700 rounded-lg transition">
                                    Clear Preview
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="bg-white rounded-xl shadow-md p-8 border border-gray-100">
            <h2 class="text-xl font-semibold mb-4">About This Component</h2>
            <div class="prose prose-blue max-w-none">
                <p>This component demonstrates how to create a modern file upload experience with image preview.</p>
                <p>Features include:</p>
                <ul>
                    <li>Drag and drop support</li>
                    <li>File browser dialog</li>
                    <li>Image preview with JavaScript interop</li>
                    <li>Responsive layout with Tailwind CSS</li>
                </ul>
                <p>Use this as a starting point for building your own file upload components.</p>
            </div>
        </div>
    </div>
</div>

@code {
    private InputFile? inputFile;
    private ElementReference previewImageElem;
    private bool isDragging = false;
    private bool hasPreview = false;

    private async Task ClickInputFile()
    {
        if (inputFile != null)
        {
            await JS.InvokeVoidAsync("clickElement", inputFile.Element);
        }
    }

    private async Task ShowPreview()
    {
        hasPreview = true;
        await JS.InvokeVoidAsync("previewImage", inputFile!.Element, previewImageElem);
    }
    
    private void ClearPreview()
    {
        hasPreview = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("eval", @"
                window.previewImage = (inputElem, imgElem) => {
                    const url = URL.createObjectURL(inputElem.files[0]);
                    imgElem.addEventListener('load', () => URL.revokeObjectURL(url), { once: true });
                    imgElem.src = url;
                }

                window.clickElement = function(element) {
                    if (element) {
                        element.click();
                    }
                }
            ");
        }
    }
}